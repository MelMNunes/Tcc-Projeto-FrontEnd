//  "use client";

// import React, { useEffect, useState } from "react";
// import LandingFooter from "@/app/landing/LandingFooter";
// import Link from "next/link";
// import { useRouter } from "next/navigation";
// import UserModal from "@/app/telas/administradores/UserModal";
// import EditUserModal from "@/app/telas/administradores/EditUserModal";

// interface Usuario {
//   id: number;
//   nome: string;
//   tipodeusuario: string;
// }

// const AdminPage = () => {
//   const router = useRouter();
//   const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);
//   const [modalOpen, setModalOpen] = useState(false);
//   const [filter, setFilter] = useState("todos");
//   const [search, setSearch] = useState("");
//   const [users, setUsers] = useState<Usuario[]>([]);
//   const [editingUser, setEditingUser] = useState<Usuario | null>(null);

//   useEffect(() => {
//     if (typeof window !== "undefined") {
//       const handleScroll = () => {
//         setIsScrolledToBottom(
//           window.innerHeight + window.scrollY >= document.body.offsetHeight
//         );
//       };
//       window.addEventListener("scroll", handleScroll);
//       return () => window.removeEventListener("scroll", handleScroll);
//     }
//   }, []);

//   useEffect(() => {
//     fetchUsers();
//   }, [filter]);

//   const fetchUsers = async () => {
//     try {
//       let endpoint = http://localhost:8080/api/usuarios/listar/${filter};
//       if (filter === "todos")
//         endpoint = "http://localhost:8080/api/usuarios/listar/todos";

//       const response = await fetch(endpoint, {
//         method: "GET",
//         headers: {
//           "Content-Type": "application/json",
//           Authorization: Bearer ${localStorage.getItem("token")},
//         },
//         cache: "no-cache",
//       });

//       if (!response.ok)
//         throw new Error(Erro ao buscar usuários: ${response.status});
//       setUsers(await response.json());
//     } catch (error) {
//       console.error("Erro ao buscar usuários:", error);
//     }
//   };

//   const handleLogout = () => {
//     localStorage.clear();
//     router.replace("/");
//   };

//   const handleDeleteUser = async (userId: number) => {
//     try {
//       const response = await fetch(
//         http://localhost:8080/api/usuarios/excluir/${userId},
//         {
//           method: "DELETE",
//           headers: {
//             "Content-Type": "application/json",
//             Authorization: Bearer ${localStorage.getItem("token")},
//           },
//         }
//       );

//       if (!response.ok)
//         throw new Error(Erro ao excluir usuário: ${response.status});
//       setUsers((prevUsers) => prevUsers.filter((user) => user.id !== userId));
//     } catch (error) {
//       console.error("Erro ao excluir usuário:", error);
//     }
//   };

//   const handleEditUser = async (userId: number) => {
//     try {
//       const response = await fetch(
//         http://localhost:8080/api/usuarios/buscar/${userId},
//         {
//           method: "GET",
//           headers: {
//             "Content-Type": "application/json",
//             Authorization: Bearer ${localStorage.getItem("token")},
//           },
//         }
//       );

//       if (!response.ok)
//         throw new Error(Erro ao buscar usuário: ${response.status});

//       const userData = await response.json();
//       setEditingUser(userData);
//       setEditingUser({ ...userData, tipoDeUsuario: userData.tipodeusuario });
//       setModalOpen(true);
//     } catch (error) {
//       console.error("Erro ao buscar usuário:", error);
//     }
//   };

//   return (
//     <div className="flex flex-col min-h-screen text-black bg-gray-100">
//       <header className="fixed top-0 left-0 w-full bg-white p-4 shadow-md flex justify-between items-center z-10">
//         <h1 className="text-xl font-semibold">Painel do Administrador</h1>
//         <div className="ml-auto">
//           <Link href="/telas/recepcao">
//             <span className="bg-white text-blue-500 px-4 py-2 rounded hover:bg-blue-700 hover:text-white">
//               Modo Recepção
//             </span>
//           </Link>
//         </div>
//         <button
//           className="text-red-500 hover:text-red-700 hover:bg-gray-200 px-4 py-2 rounded"
//           onClick={handleLogout}
//         >
//           Sair
//         </button>
//       </header>

//       <div className="flex flex-grow w-full max-w-5xl mx-auto mt-16">
//         <main className="w-full bg-white p-6 rounded-lg shadow-md">
//           <h2 className="text-xl font-semibold mb-2">Gerenciar Usuários</h2>
//           <div className="flex gap-4 mb-4">
//             <button
//               className="bg-blue-500 text-white px-4 py-2 rounded"
//               onClick={() => {
//                 setEditingUser(null);
//                 setModalOpen(true);
//               }}
//             >
//               Cadastrar Novo Usuário
//             </button>
//             <select
//               className="border px-4 py-2 rounded"
//               value={filter}
//               onChange={(e) => setFilter(e.target.value)}
//             >
//               <option value="todos">Todos</option>
//               <option value="CLIENTE">Clientes</option>
//               <option value="FUNCIONARIO">Funcionários</option>
//               <option value="ADMINISTRADOR">Administradores</option>
//             </select>
//             <input
//               type="text"
//               placeholder="Buscar usuário"
//               className="border px-4 py-2 rounded"
//               value={search}
//               onChange={(e) => setSearch(e.target.value)}
//             />
//           </div>
//           <div className="grid grid-cols-2 gap-4">
//             {users
//               .filter((user) =>
//                 user.nome.toLowerCase().includes(search.toLowerCase())
//               )
//               .map((user) => (
//                 <div key={user.id} className="border p-4 rounded shadow-md">
//                   <h3 className="font-semibold">{user.nome}</h3>
//                   <p className="text-gray-600">{user.tipodeusuario}</p>
//                   <button
//                     className="text-blue-500 mt-2"
//                     onClick={() => handleEditUser(user.id)}
//                   >
//                     Editar
//                   </button>
//                   <button
//                     className="text-red-500 ml-2"
//                     onClick={() => handleDeleteUser(user.id)}
//                   >
//                     Excluir
//                   </button>
//                 </div>
//               ))}
//           </div>
//         </main>
//       </div>

//       {modalOpen && (editingUser ? (
//           <EditUserModal
//             isOpen={modalOpen}
//             onClose={() => setModalOpen(false)}
//             user={editingUser}
//             onSave={fetchUsers}
//           />
//         ) : (
//           <UserModal
//             isOpen={modalOpen}
//             onClose={() => setModalOpen(false)}
//             onSave={fetchUsers}
//           />
//         ))}

//       {isScrolledToBottom && <LandingFooter />}
//     </div>
//   );
// };

// export default AdminPage;